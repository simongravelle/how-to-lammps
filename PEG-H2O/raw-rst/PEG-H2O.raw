Pulling a PEG molecule in water
===============================

Here a single PEG molecule is immersed in water, and forces are applied to its 
ends in order to extend it, as seen in this `video`_. This simulation was
inspired from this `article`_ by Liese et al.

.. _video: https://youtu.be/05DgPNfjReY
.. _article: https://doi.org/10.1021/acsnano.6b07071

The input files are described here. They are also available, together with all 
required data and parameter files in this `folder`_.

.. _folder: files/

Creating a box of water
-----------------------

This script creates a parallelepiped rectangle box and fill it with 
TIP4P/epsilon water molecules. The box is relaxed at ambient temperature 
and pressure in the NPT ensemble.

Video showing water molecules being equilibrated in the NPT ensemble:

.. image:: files/pureH2O/water.webp
   :width: 600
   :alt: Water molecules being equilibrated in the NPT ensemble.

.. code-block:: python

# folder pureH2O file input.lammps
#space units real
#space atom_style full
#space bond_style harmonic
#space angle_style charmm
#space dihedral_style charmm
#space pair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0
#space kspace_style pppm/tip4p 1.0e-4

# jump

Note: The atom_style `full` is required for charged molecules, and the pair_style `lj/cut/tip4p/long`
is a Lennard-Jones (cut) - Coulomb (long) pair style specifically adapted to 4 points water models,
which is what we want here. 

.. code-block::

#space region box block -40 40 -15 15 -15 15
#space create_box 7 box &
#space bond/types 6 &
#space angle/types 9 &
#space dihedral/types 14 &
#space extra/bond/per/atom 2 &
#space extra/angle/per/atom 1 &
#space extra/special/per/atom 2

# jump

.. code-block::

#space include ../PARM.lammps

# jump

.. code-block::

#space molecule h2omol H2OTip4p.txt
#space create_atoms 0 random 500 456415 NULL mol h2omol 454756
#space group H2O type 1 2
#space delete_atoms overlap 2 H2O H2O mol yes

# jump

.. code-block::

#space fix myshk H2O shake 1.0e-4 200 0 b 1 a 1 mol h2omol
#space fix mynpt all npt temp 300 300 100 iso 1 1 1000

# jump

.. code-block::

#space dump mydmp all atom 1000 dump.lammpstrj
#space variable mytemp equal temp
#space variable myvol equal vol
#space fix myat1 all ave/time 10 10 100 v_mytemp file temperature.dat
#space fix myat2 all ave/time 10 10 100 v_myvol file volume.dat

# jump

.. code-block::

#space timestep 1.0
#space thermo 1000
#space run 30000

# jump

.. code-block::

#space write_data H2O.data

Creating a single PEG in vacuum
-------------------------------

The initial structure of the PEG molecule is extremely out-of equilibrium,
with all the atom placed in the same plane. An energy minimisation is required,
followed by a short NVT equilibration. 

.. image:: files/singlePEG/singlePEG.webp
   :width: 600
   :alt: PEG molecule in vacuum.

Anticipating the future merge, the box size is set to be 
equal to the final water box (set in the Python script 
generating the PEG molecule).

.. code-block:: python

# folder singlePEG file input.lammps
#space units real
#space atom_style full
#space bond_style harmonic
#space angle_style charmm
#space dihedral_style charmm
#space pair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0
#space kspace_style pppm/tip4p 1.0e-4

# jump

.. code-block:: python

#space special_bonds lj 0.0 0.0 0.5

*Comment -* The special_bonds command cancels the interactions between the
closest atoms of the molecule.

# jump

.. code-block:: python

#space read_data init.data
#space include ../PARM.lammps

# jump

.. code-block:: python

#space group PEG type 3 4 5 6 7

# jump

.. code-block:: python

#space dump mydmp all atom 10 dump.eq.lammpstrj
#space thermo 1

# jump

.. code-block:: python

#space minimize 1.0e-4 1.0e-6 100 1000
#space undump mydmp
#space reset_timestep 0

# jump

*Comment -* Minimisation of energy is required as the initial 
configuration of the PEG molecule is far from an equilibrium value.
In addition, the high resolution dump command is cancelled at 
the end of the minimisation, and a new lower resolution dump is created below.

.. code-block:: python

#space fix mynve all nve
#space fix myber all temp/berendsen 300 300 100

*Comment -* The PEG is equilibrated in the NVT ensemble. No box relaxation 
is required as the PEG is in vacuum. 

# jump

.. code-block:: python

#space dump mydmp all atom 1000 dump.lammpstrj
#space thermo 1000
#space variable mytemp equal temp
#space fix myat1 all ave/time 10 10 100 v_mytemp file temperature.dat

# jump

.. code-block:: python

#space timestep 1
#space run 10000

# jump

.. code-block:: python

#space write_data PEG.data

Solvating the PEG in water
--------------------------

Video showing the PEG molecule in water. The system is equilibrated in 
the NPT ensemble: 

.. image:: files/mergePEGH2O/solvatedPEG.webp
   :width: 600
   :alt: PEG molecule in water.

.. code-block:: python

# folder mergePEGH2O file input.lammps
#space units real
#space atom_style full
#space bond_style harmonic
#space angle_style charmm
#space dihedral_style charmm
#space pair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0
#space kspace_style pppm/tip4p 1.0e-4

# jump

.. code-block:: python

#space special_bonds lj 0.0 0.0 0.5

# jump

.. code-block:: python

#space read_data ../singlePEG/PEG.data
#space read_data ../pureH2O/H2O.data add append
#space include ../PARM.lammps

# jump

.. code-block:: python

#space group H2O type 1 2
#space group PEG type 3 4 5 6 7

# jump

.. code-block:: python

#space delete_atoms overlap 2.0 H2O PEG mol yes

# jump

Water molecules that are overlapping must be deleted. The value of 2 Angstroms is 
fixed arbitrary, and can be chosen through trial and error. The `mol yes`
option ensures that full molecule are deleted. 

.. code-block:: python

#space fix myshk H2O shake 1.0e-4 200 0 b 1 a 1
#space fix mynpt all npt temp 300 300 100 x 1 1 1000
#space timestep 1.0

# jump

.. code-block:: python

#space dump mydmp all atom 100 dump.lammpstrj
#space thermo 100
#space variable mytemp equal temp
#space variable myvol equal vol
#space fix myat1 all ave/time 10 10 100 v_mytemp file temperature.dat
#space fix myat2 all ave/time 10 10 100 v_myvol file volume.dat

# jump

.. code-block:: python

#space run 10000
#space write_data mix.data

Pulling on the PEG
------------------

Video showing the PEG molecule being pulled in water.

.. image:: files/pullonPEG/pullonPEG.webp
   :width: 600
   :alt: PEG molecule being pulled in water.

.. code-block:: python

# folder pullonPEG file input.lammps

#space variable f0 equal 2 # kcal/mol/A # 1 kcal/mol/A = 67.2 pN

# jump

*Comment -* The force is chosen to be large enough to overcome thermal agitation
and entropic contribution from both water and PEG molecules. 

.. code-block:: python

#space units real
#space atom_style full
#space bond_style harmonic
#space angle_style charmm
#space dihedral_style charmm
#space pair_style lj/cut/tip4p/long 1 2 1 1 0.1546 12.0
#space kspace_style pppm/tip4p 1.0e-4

# jump

.. code-block:: python

#space special_bonds lj 0.0 0.0 0.5

# jump

.. code-block:: python

#space read_data ../mergePEGH2O/mix.data
#space include ../PARM.lammps

# jump

*Comment -* Simulation starts from the equilibrated PEG+water system.

.. code-block:: python

#space group H2O type 1 2
#space group PEG type 3 4 5 6 7
#space group oxygen_end1 id 65
#space group oxygen_end2 id 4

# jump

*Comment -* The two oxygen atoms located respectively at the two PEG ends
are selected and placed in groups on which the force will be applied.  

.. code-block:: python

#space dump mydmp all atom 1000 dump.lammpstrj
#space # write_dump all atom dump.lammpstrj
#space # dump myxtc xtc atom 1000 dump.xtc

# jump

*Comment -* To generate smaller dump files in compressed xtc format, 
comment the mydmp line and uncomment both the write_dump and myxtc lines.
This is useful for generating higher resolution trajectories.

.. code-block:: python

#space timestep 1
#space fix myshk H2O shake 1.0e-4 200 0 b 1 a 1
#space fix mynvt all nvt temp 300 300 100

# jump

.. code-block:: python

#space variable mytemp equal temp
#space fix myat1 all ave/time 10 10 100 v_mytemp file temperature.dat
#space variable x1 equal xcm(oxygen_end1,x)
#space variable x2 equal xcm(oxygen_end2,x)
#space variable delta_x equal abs(v_x1-v_x2)
#space fix myat2 all ave/time 10 10 100 v_delta_x file end-to-end-distance.dat
#space thermo 10000

# jump

*Comment -* The distance between the two ends are here extracted directly using
the LAMMPS internal commands, but the same information can also be extracted
from the dump file after the simulation is over.  

.. code-block:: python

#space run 100000

# jump

*Comment -* First run

.. code-block:: python

#space fix myaf1 oxygen_end1 addforce ${f0} 0 0
#space fix myaf2 oxygen_end2 addforce -${f0} 0 0

# jump

.. code-block:: python

#space run 200000

*Comment -* The forcing is applied only during the second part of the run.